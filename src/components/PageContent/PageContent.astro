---
import type { MarkdownHeading } from 'astro';
import type { CollectionEntry } from 'astro:content';
import MoreMenu from '../RightSidebar/MoreMenu.astro';
import TableOfContents from '../RightSidebar/TableOfContents';

type Props = CollectionEntry<'docs'>['data'] & {
	headings: MarkdownHeading[];
	githubEditUrl: string;
};

type Transcription = {
	start: number;
	end: number;
	text: string;
};

const { headings, githubEditUrl, ...data } = Astro.props;
let transcript = [];
if (data.embedId) {
	const pathComponents = Astro.url.pathname.split('/');
	pathComponents[pathComponents.length - 1] = data.embedId;
	const jsonFile = Astro.url.origin +'/transcripts/' + pathComponents.slice(-3).join('/') + '.json';
	console.log(jsonFile);
	transcript = await fetch(jsonFile).then((res) => res.json());
}
---

<article id="article" class="content">
	<section class="main-section">
		<h1 class="content-title" id="overview">{data.title}</h1>
		<nav class="block sm:hidden">
			<TableOfContents client:media="(max-width: 50em)" headings={headings} />
		</nav>
		{data.platform === "youtube" && (
			<div class="video-container">
				<iframe
					src={`https://www.youtube.com/embed/${data.embedId}?enablejsapi=1`}
					frameborder="0"
					allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
					allowfullscreen
				></iframe>
			</div>
			<div class="transcript-container">
				{transcript.map((item:Transcription) =>(
					<div onclick={"seekTo(" + item.start + ")"}>{item.text}</div>
				))}
				<script is:inline>
					function seekTo(time) {
						const player = document.querySelector('iframe').contentWindow;
						player.postMessage('{"event":"command","func":"seekTo","args":[' + time + ']}', '*');
					}
				</script>
			</div>
		)}
		<slot />
	</section>
	<nav class="block sm:hidden">
		<MoreMenu editHref={githubEditUrl} />
	</nav>
</article>

<style>
	.transcript-container {
		max-height: 300px;
		overflow-y: scroll;
	}
	.content {
		padding: 0;
		max-width: 75ch;
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.content > section {
		margin-bottom: 4rem;
	}

	.block {
		display: block;
	}

	@media (min-width: 50em) {
		.sm\:hidden {
			display: none;
		}
	}
</style>
